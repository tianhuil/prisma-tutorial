# import { Post, PostWhereInput, PostWhereUniqueInput, PostOrderByInput, PostConnection } from "generated/prisma.graphql"
# import { User, UserWhereInput, UserWhereUniqueInput, UserOrderByInput, UserConnection } from "generated/prisma.graphql"

scalar DateTime

type Mutation {
  signup(email: String!, password: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type AuthPayload{
  userId: ID!
  token: String!
}

type PublicUser {
  id:         ID!
  firstName:  String!
  lastName:   String!
  about:      String
  createdAt:  DateTime!
  updatedAt:  DateTime!
  posts:      [Post!]!
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  user(where: UserWhereUniqueInput!): PublicUser
  # users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  # usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
}
